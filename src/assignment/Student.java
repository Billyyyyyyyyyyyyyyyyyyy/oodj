/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package assignment;

import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author dtang
 */
public class Student extends User implements FileLocation{
    
    private double studentContact;
    private String studentEmail;
    
    public Student(){
        
    }

    public static ArrayList<Student> getAll() {
        ArrayList<Student> students = new ArrayList<Student>();
        String line;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(studentFile));
            while ((line = reader.readLine()) != null) {
                String[] studentInfo = line.split(";");
                Student student = new Student();
                student.setUsername(studentInfo[0]);
                student.setStudentContact(Double.parseDouble(studentInfo[1]));
                student.setStudentEmail(studentInfo[2]);
                students.add(student);
            }
            reader.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Failed access to file.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
        return students;
    }

    public static Student getStudentByUsername(String username) {
        Student student = new Student();

        ArrayList<Student> students = Student.getAll();
        for (Student tempStudent : students) {
            String tempUsername = tempStudent.getUsername();
            if (tempUsername.equalsIgnoreCase(username)) {
                student = tempStudent;
                break;
            }
        }
        return student;
    }
    
    public boolean editStudentProfile(String currentStudentName){
        boolean success;
        StringBuilder stringBuilder = new StringBuilder();
        StringBuilder stringBuilder2 = new StringBuilder();
        String line;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(userFile));
            while ((line = reader.readLine()) != null) {
                String[] user = line.split(";");
                if(currentStudentName.equals(user[0]))
                    stringBuilder.append(username).append(";").append(password).append(";").append("Student").append("\n");
                else
                    stringBuilder.append(line).append("\n");
            }
            reader.close();
            BufferedReader reader2 = new BufferedReader(new FileReader(studentFile));
            while ((line = reader2.readLine()) != null) {
                String[] student = line.split(";");
                if(currentStudentName.equals(student[1]))
                    stringBuilder2.append(username).append(";").append(getStudentContact()).append(";").append(getStudentEmail()).append("\n");
                else
                    stringBuilder2.append(line).append("\n");
            }
            reader2.close();
            FileWriter writer = new FileWriter(userFile);
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(stringBuilder.toString());
            bufferedWriter.close();
            FileWriter writer2 = new FileWriter(studentFile);
            BufferedWriter bufferedWriter2 = new BufferedWriter(writer2);
            bufferedWriter2.write(stringBuilder2.toString());
            bufferedWriter2.close();
            success = true;
        } catch (IOException e) {
            success = false;
        }
        return success;
    }
    
    public boolean generateStudentList(){
        boolean success;
        StringBuilder stringBuilder = new StringBuilder();
        String line;
        stringBuilder.append("Student List\n\n").append("Generated by ").append(getCurrentDateTime()).append("\n\n").append(String.format("%-20s", "Student name")).append(String.format("%-16s", "Contact Number")).append("Email Address").append("\n");
        try {
            BufferedReader reader = new BufferedReader(new FileReader(studentFile));
            while ((line = reader.readLine()) != null) {
                String[] record = line.split(";");
                stringBuilder.append(String.format("%-20s", record[0])).append(String.format("%-16s", record[1])).append(record[2]).append("\n");;
            }
            reader.close();
            FileWriter writer = new FileWriter(reportFile);
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(stringBuilder.toString());
            bufferedWriter.close();
            success = true;
        } catch (IOException ex) {
            success = false;
        }
        return success;
    }

    /**
     * @return the studentContact
     */
    public double getStudentContact() {
        return studentContact;
    }

    /**
     * @param studentContact the studentContact to set
     */
    public void setStudentContact(double studentContact) {
        this.studentContact = studentContact;
    }

    /**
     * @return the studentEmail
     */
    public String getStudentEmail() {
        return studentEmail;
    }

    /**
     * @param studentEmail the studentEmail to set
     */
    public void setStudentEmail(String studentEmail) {
        this.studentEmail = studentEmail;
    }
}
